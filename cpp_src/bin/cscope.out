cscope 15 $HOME/Documents/Github/ds_c -q 0000000168 0000021890
	@MES.cpp

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<m©h.h
>

18 
	$¥odu˘
(*
öput
,*
ouçut
,
size
)

20 
i
=0;

21 
¥t
=1;

25 
i
=0;i<
size
;i++)

27 if(
öput
[
i
]!=0)

29 
¥t
ıπ*
öput
[
i
];

31 
ouçut
[
i
]=
öput
[i];

32 
	`¥ötf
("›t->[%d]\n",
ouçut
[
i
]);

34 
	`¥ötf
("¥t->[%d]\n",
¥t
);

35 
i
=0;i<
size
;i++)

37 if(
ouçut
[
i
]!=0)

39 
ouçut
[
i
]=
¥t
/output[i];

43 
ouçut
[
i
]=0;

45 
	`¥ötf
("Ouçut[%d]:%d\n",
i
,
ouçut
[i]);

47 
	}
}

54 * 
	$d©a_öput
(
öput
,*
Àn
)

56 
i
=0;

57 
öput
=
	`abs
(input);

58 
ç
=
öput
;

59 –()
ç
 )/10>=1)

61 
ç
=tp/10;

62 
i
++;

64 *
ªs
=(*)
	`mÆloc
(()*(
i
+1));

65 *
Àn
=
i
+1;

66 
i
=0;

67 –()
öput
 )/10 >=1)

69 
ªs
[
i
]=
öput
%10;

70 
öput
=input/10;

71 
	`¥ötf
("ò%dÑes->%d\töput:%d\n",
i
,
ªs
[i],
öput
);

72 
i
++;

74 
ªs
[
i
]=
öput
%10;

75 
	`¥ötf
("ªs->%d\töput:%d\n",
ªs
[
i
],
öput
);

77  
ªs
;

78 
	}
}

79 
	$d©a_ouçut
(* 
ouçut
,
size
)

81 
i
=0;

82 
›töt
=0;

83 
i
=0;i<
size
;i++)

85 
›töt
=›töt+
ouçut
[
i
]*
	`pow
(10.0,i);

87  
›töt
;

88 
	}
}

91 
	$maö
(
¨gc
,*
¨gv
[])

93 
Àn
;

94 *
ªs
=
	`d©a_öput
(10230023,&
Àn
);

95 
i
=0;

96 
	`¥ötf
("Àn:%d\n",
Àn
);

97 
i
=0;i<
Àn
;i++)

99 
	`¥ötf
("%dÇow %d\n",
i
,
ªs
[i]);

101 
	`gëch¨
();

102 *
ouçut
=(*)
	`mÆloc
(()*
Àn
);

103 
	`¥odu˘
(
ªs
,
ouçut
,
Àn
);

104 
‚
=
	`d©a_ouçut
(
ouçut
,
Àn
);

105 
	`¥ötf
("%d\n",
‚
);

106 
	`‰ì
(
ªs
);

107 
	`‰ì
(
ouçut
);

108 
	`gëch¨
();

109 
	}
}

	@army.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

10 
	sÀgi⁄


12 
	mnum
;

13 
Àgi⁄
 * 
	m≤
;

14 }
	tLegio
,*
	tLegio_±r
;

16 
	$mîge_¨my
(
Legio_±r
 * 
¨my
,*
ªc
,
a
,
b
)

18 
a
=a-1;

19 
b
=b-1;

20 
Legio_±r
 
cur
=
¨my
[
a
];

21 
cur
->
≤
)

23 
cur
=cur->
≤
;

25 
cur
->
≤
=
¨my
[
b
];

26 
¨my
[
b
]=
NULL
;

27 
ªc
[
a
]+Ùec[
b
];

28 
ªc
[
b
]=0;

29 
	}
}

30 
	$ö£π_¨my
(
Legio_±r
 *
¨my
,*
ªc
,
a
,
x
)

32 
a
=a-1;

33 
Legio_±r
 
√w_a
=(Legio_±r)
	`mÆloc
((
Legio
));

34 
√w_a
->
num
=
x
;

35 
√w_a
->
≤
=
¨my
[
a
];

36 
¨my
[
a
]=
√w_a
;

37 
	}
}

38 
	$dñëe_¨my
(
Legio_±r
 *
¨my
,*
ªc
,
a
, 
x
)

40 
a
=a-1;

41 
Legio_±r
 
cur
=
¨my
[
a
];

42 if(
cur
->
num
==
x
)

44 
¨my
[
a
]=
cur
->
≤
;

45 
	`‰ì
(
cur
);

47 
cur
->
≤
)

49 if(
cur
->
≤
->
num
!=
x
)

51 
cur
=cur->
≤
;

55 
Legio_±r
 
ç
=
cur
->
≤
;

56 
cur
->
≤
=cur->pn->pn;

57 
	`‰ì
(
ç
);

60 
	}
}

61 
	$quîy_¨my
(
Legio_±r
 *
¨my
,*
ªc
,
a
)

63 
a
=a-1;

64 
Legio_±r
 
cur
=
¨my
[
a
];

65 if(
cur
==
NULL
)

67 
	`puts
("-1");

71 
	`¥ötf
("%d",
cur
->
num
);

72 
cur
->
≤
)

75 
	`¥ötf
(" %d",
cur
->
≤
->
num
);

76 
cur
=cur->
≤
;

78 
	`¥ötf
("\n");

81 
	}
}

83 
	$maö
()

85 
N
,
M
;

86 
	`sˇnf
("%d%d",&
N
,&
M
);

87  !(
N
>=2&&
M
<=1000) )

89 
	`puts
("Error input,N>=2,M<=1000,Again:");

90 
	`sˇnf
("%d%d",&
N
,&
M
);

92 
i
;

93 *
ªc
=(*)
	`mÆloc
(()*
N
);

94 
Legio_±r
 *
¨my
=(Legio_±∏*)
	`mÆloc
((Legio_±r)*
N
);

95 
i
=0;i<
N
;i++)

97 
	`sˇnf
("%d",
ªc
+
i
);

98 
¨my
[
i
]=(
Legio_±r
)
	`mÆloc
((
Legio
));

99 
Legio_±r
 
cur
=
¨my
[
i
];

100 
	`sˇnf
("%d",&
cur
->
num
 );

101 
j
;

103 
j
=1;j<
ªc
[
i
];j++)

105 
cur
->
≤
=(
Legio_±r
)
	`mÆloc
((
Legio
));

106 
	`sˇnf
("%d",&
cur
->
≤
->
num
);

107 
cur
=cur->
≤
;

108 
cur
->
≤
=
NULL
;

111 
j
;

112 
j
=0;j<
M
;j++)

114 
c
;

115 
a
,
b
,
x
;

120 
	`sˇnf
(" %c",&
c
);

121  
c
 )

124 
	`sˇnf
("%d%d",&
a
,&
b
);

125 
	`mîge_¨my
(
¨my
,
ªc
,
a
,
b
);

128 
	`sˇnf
("%d%d",&
a
,&
x
);

129 
	`ö£π_¨my
(
¨my
,
ªc
,
a
,
x
);

132 
	`sˇnf
("%d%d",&
a
,&
x
);

133 
	`dñëe_¨my
(
¨my
,
ªc
,
a
,
x
);

136 
	`sˇnf
("%d",&
a
);

137 
	`quîy_¨my
(
¨my
,
ªc
,
a
);

143 
	}
}

	@ballgame.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

10 
	$maö
()

12 
n
;

13 
	`sˇnf
("%d",&
n
);

14 *
b1
=(*)
	`mÆloc
(()*
n
);

15 *
b2
=(*)
	`mÆloc
(()*
n
);

16 
j
;

18 
j
=0;j<
n
;j++)

20 
	`sˇnf
("%d",
b1
+
j
);

22 
j
=0;j<
n
;j++)

24 
	`sˇnf
("%d",
b2
+
j
);

29 
i
;

30 
j
=0,
i
=0;i<
n
,j<n;j++,i++)

33 if(
b1
[
i
]!=
b2
[
j
])

35 
Êag
=
j
;

40 
Êag
<
n
)

43 if(
b1
[
i
]==
b2
[
Êag
])

47 
Êag
=flag+1;

51 
i
<
n
&&
Êag
>=0)

53 if(
b1
[
i
]==
b2
[
Êag
])

55 
i
=i+1;

56 
Êag
=flag-1;

60 
Êag
=-1;

61 
	`puts
("Reject!");

65 if(
Êag
==-1)

70 
j
=
i
;

74 if(
i
==
n
)

76 
	`puts
("Accept!");

77 
j
=0,
i
=0;i<
n
,j<n;i++,j++)

80 if(
b1
[
i
]!=
b2
[
j
])

82 
Êag
=
j
;

83 
Êag
<
n
)

85 if(
b1
[
i
]==
b2
[
Êag
])

89 
	`puts
("in");

90 
Êag
+=1;

92 
	`puts
("in");

93 
i
<
Êag
)

95 
	`puts
("out");

96 
i
+=1;

98 
	`puts
("out");

99 
	`¥ötf
("Now i:%d j:%d\n",
i
,
j
);

100 
j
=
i
;

104 
	`puts
("in\nout");

109 
	}
}

	@calcu_digit.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

13 
	sdigô
{

15 
	mvÆ
;

17 
digô
 * 
	mhigh
;

18 
digô
 *
	mlow
;

19 }
	tbô
,*
	tbô_±r
;

28 
bô_±r
 
	$ˇl_œrge
(
bô_±r
 *
œ°_bô
, 
m
)

30 
bô_±r
 
cur
=*
œ°_bô
;

31 
ˇºy
=0;

36 
cur
)

38 
cur
->
vÆ
*=
m
;

39 
cur
->
vÆ
+=
ˇºy
;

40 
ˇºy
=
cur
->
vÆ
/10;

41 
cur
->
vÆ
=cur->val%10;

42 if(
cur
->
high
)

44 
cur
=cur->
high
;

53 
	`¥ötf
("ˇºy:%d\n",
ˇºy
);

54 
ˇºy
>0)

56 
cur
->
high
=(
bô_±r
)
	`mÆloc
((
bô
));

57 
cur
->
high
->
low
=cur;

58 
cur
->
high
->high=
NULL
;

60 
cur
->
high
->
vÆ
=
ˇºy
%10;

61 
ˇºy
=carry/10;

62 
cur
=cur->
high
;

64  
cur
;

65 
	}
}

66 
bô_±r
 
	$möus_li°
(
bô_±r
 *
œ°_bô
,
m
)

68 
Êag
=1;

69 
bô_±r
 
cur
=*
œ°_bô
;

70 
m
/10>0&&
cur
)

72 
cur
->
vÆ
-=
m
%10;

73 if(
cur
->
vÆ
<0)

75 if(
cur
->
high
)

77 
cur
->
vÆ
+=10;

78 
cur
->
high
->
vÆ
-=1;

79 if(
cur
->
high
->
vÆ
)

81 
	`‰ì
(
cur
->
high
);

82 
cur
->
high
=
NULL
;

87 
Êag
=-1;

91 
m
=m/10;

92 
cur
=cur->
high
;

94 if(
m
/10>0)

97 
m
/10>0)

99 
cur
->
high
=(
bô_±r
)
	`mÆloc
((
bô
));

100 
cur
->
high
->
low
=cur;

101 
cur
->
high
->high=
NULL
;

102 
cur
->
high
->
vÆ
=
m
%10;

103 
m
=m/10;

105 
Êag
=-1;

107 if(
m
/10==0)

109 if(
cur
)

111 
cur
->
vÆ
-=
m
;

115 
	`maö
()

117 
bô_±r
 
l
=(bô_±r)
	`mÆloc
((
bô
));

118 
bô_±r
 
cur
;

119 
l
->
high
=
NULL
;

120 
l
->
low
=
NULL
;

121 
l
->
vÆ
=24;

122 
cur
=
	`ˇl_œrge
(&
l
,25);

123 
cur
=
	`ˇl_œrge
(&
l
,25);

124 
cur
)

126 
	`¥ötf
("%d",
cur
->
vÆ
);

127 
cur
=cur->
low
;

129 
	`¥ötf
("\n");

	@cs.c

51 
	~<°dio.h
>

52 
	~<°dlib.h
>

55 
	$sum
(
•lô
)

57 if(
•lô
%2==0)

59  (
•lô
+1)*split/2;

63  (
•lô
-1)*split/2;

65 
	}
}

68 
	$c⁄s_£q
(
öput
)

70 
i
=0;

71 
cou¡
=0;

72 
i
=2;
	`sum
(i)<=
öput
;i++)

74 if–(
öput
-
	`sum
(
i
))%i==0 )

76 
cou¡
+=1;

79  
cou¡
;

80 
	}
}

82 
	$maö
(
¨gc
,*
¨gv
[])

84 if(
¨gc
!=2)

86 
	`¥ötf
("P¨amëîÉº‹! %d i≈ut\n.",
¨gc
);

87 
	`¥ötf
("%s\n",
¨gv
[0]);

88 
	`exô
(1);

90 
	`¥ötf
–"%d\n",
	`c⁄s_£q
–
	`©oi
(
¨gv
[1]) ) );

91 
	}
}

	@dom.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

10 
	$maö
()

12 
n
;

13 
	`sˇnf
("%d",&
n
);

14 
i
;

15 *
D
=(*)
	`mÆloc
(()*
n
);

16 
i
=0;i<
n
;i++)

18 
	`sˇnf
("%d",
D
+
i
);

23 
i
=0;i<
n
-1;i++)

26 
j
;

27 
o
=
D
[
i
];

28 
j
=
i
+1;j<
n
;j++)

30 if(
D
[
j
]>=D[
i
])

32 
D
[
i
]=
j
;

37 if(
j
==
n
-1&&
D
[
i
]==
o
)

39 
D
[
i
]=-1;

44 
	`¥ötf
("%d ",
D
[
i
]);

46 
D
[
n
-1]=-1;

47 
	`¥ötf
("%d",
D
[
i
]);

48 
	`¥ötf
("\n");

49 
	`‰ì
(
D
);

51 
	}
}

	@gift.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

9 
	sSèckN€
{

10 
	mvÆ
;

11 
SèckN€
 * 
	mlowî
;

12 }
	t¢
,*
	t¢_±r
;

14 
	$check_°ack
(
¢_±r
 
t›
)

16 
¢_±r
 
cur
=
t›
;

17 
cur
)

19 
	`¥ötf
("%c",
cur
->
vÆ
);

20 
cur
=cur->
lowî
;

22 
	`¥ötf
("\n");

23 
	}
}

25 
	$push_°ack
(
¢_±r
 *
t›
,
vÆ
)

27 
¢_±r
 
ç
=(¢_±r)
	`mÆloc
((
¢
));

28 
ç
->
vÆ
=val;

29 
ç
->
lowî
=*
t›
;

32 *
t›
=
ç
;

35 
	}
}

36 
	$p›_°ack
(
¢_±r
 * 
t›
)

38 
¢_±r
 
ç
=*
t›
;

39 *
t›
=(*t›)->
lowî
;

40 
	`‰ì
(
ç
);

41 
ç
=
NULL
;

42 
	}
}

43 
	$brk_°ack
(
¢_±r
 *
t›
)

45 (*
t›
)->
lowî
)

47 
	`p›_°ack
(
t›
);

49 
	}
}

51 
	$maö
()

53 
¢_±r
 
t›
=(¢_±r)
	`mÆloc
((
¢
));

54 
¢_±r
 
bŸtom
=
t›
;

55 
t›
->
lowî
=
NULL
;

56 
cur
;

57 
	`sˇnf
("%c",&
cur
);

59 
N
=0;

60 
n
=0;

61 
cur
!='\n' && cur!='\0')

63 if–
cur
=='(' )

66 
n
+=1;

67 
	`push_°ack
(&
t›
,
cur
);

69 i‡–
cur
== 'G' )

71 
N
+=
n
;

73 
n
=0;

75 i‡–
cur
 == ')' )

79 
	`p›_°ack
(&
t›
);

80 
n
-=1;

82 if(
n
<0)

84 
n
=0;

87 
	`sˇnf
("%c",&
cur
);

89 
	`¥ötf
("%d\n",
N
);

90 
	`brk_°ack
(&
t›
);

91 
	`‰ì
(
t›
);

93 
	}
}

	@gold_bach.c

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<°dio.h
>

21 
	$¥ime_check
(
N
)

23 
i
=0;

24 
i
=2;i<
N
;i++)

26 if(
N
%
i
==0)

32 
	}
}

35 * 
	$lowî_¥ime
(
R
)

40 *
ªs
=(*)
	`mÆloc
(()*
R
);

41 
	`mem£t
(
ªs
,'0',
R
);

42 
i
=0;

43 
cou¡
=0;

44 
i
=2;i<
R
;i++)

46 
ªs
[
i
]=
	`¥ime_check
(i);

47 if(
ªs
[
i
]=='1')

49 
cou¡
+=1;

52 *
¥ime_¨øy
=(*)
	`mÆloc
(()*
cou¡
);

53 
cou¡
=0;

54 
i
=2;i<
R
;i++)

56 if(
ªs
[
i
]=='1')

58 
¥ime_¨øy
[
cou¡
]=
i
;

61  
ªs
;

62 
	}
}

65 *
	$lowî_¥ime_1
(
R
)

67 *
ªs
=(*)
	`mÆloc
(()*
R
);

68 
	`mem£t
(
ªs
,'1',
R
);

69 
ªs
[0]=res[1]='0';res[2]='1';

70 
i
=2;

71 
i
=2;i<
R
/2;i++)

73 
X
=2;

74 
i
*
X
<
R
)

76 
ªs
[
i
*
X
]='0';

77 
X
+=1;

80  
ªs
;

81 
	}
}

98 
	$sum_cou¡
(*
ªs
,
R
)

100 
i
=2;

101 
cou¡
=0;

102 
i
=2;i<=
R
/2;i++)

104 if(
ªs
[
i
]=='1'&&ªs[
R
-i]=='1')

106 
cou¡
+=1;

109  
cou¡
;

110 
	}
}

113 
	$maö
(
¨gc
,*
¨gv
[])

115 if(
¨gc
!=2)

117 
	`¥ötf
("P¨amëî Eº‹! Föd %dárgumíts\n",
¨gc
);

118 
	`exô
(0);

120 
	`¥ötf
("¨g1:%s\èrg2:%s\n",
¨gv
[0],argv[1]);

121 
R
=
	`©oi
(
¨gv
[1]);

123 *
ªs
=
	`lowî_¥ime_1
(
R
);

124 
i
=2;

125 
i
=2;i<
	`©oi
(
¨gv
[1]);i++)

127 if(
ªs
[
i
]=='1')

129 
	`¥ötf
("%d\t",
i
);

132 
	`¥ötf
("\n");

134 
	`¥ötf
("Thîê¨ê%dÖaú†ßtifõd.\n",
	`sum_cou¡
(
ªs
,
R
));

137 
	}
}

	@kmp.c

1 
	~<°dio.h
>

2 
	#MAX_STR_SIZE
 500

	)

3 
	#MAX_PAT_SIZE
 20

	)

8 
	$maö
()

10 
Àn1
;

11 
	`sˇnf
("%d",&
Àn1
);

12 *
öput
=(*)
	`mÆloc
(()*
Àn1
);

13 
	`sˇnf
("%s",
öput
);

14 
Àn2
;

15 
	`sˇnf
("%d",&
Àn2
);

16 *
∑âîn
=(*)
	`mÆloc
(()*
Àn2
);

17 
	`sˇnf
("%s",
∑âîn
);

18 *
n
=(*)
	`mÆloc
(()*
Àn2
);

19 
n
[0]=0;

20 
j
=0;

22 
n
[0]=0;

23 
n
[1]=0;

24 
j
=2;

25 
j
<
Àn
)

27 
n
[
k
]!=0)

29 if(
a
[
k
]=˜[
j
])

31 
n
[
j
+1]=
k
+1;

36 
k
=
n
[k];

37 if(
n
[
k
]==0)

39 
n
[
j
+1]=0;

44 
j
=j+1;

46 
i
=0;

47 
j
=0;

48 
i
<
Àn1
)

50 
öput
[
i
]!=
∑âîn
[
j
])

52 
j
=
n
[j];

53 if(
n
[
j
]==0)

55 
j
=0;

59 
j
+=1;

60 
i
+=1;

61 if(
j
>=
Àn2
-1)

63 
	`¥ötf
("String Match!\n");

66 if(
i
+1>=
Àn1
&&
j
<
Àn2
-1)

68 
	`¥ötf
("String Not Found!\n");

72 
	}
}

	@poj_sum.c

1 
	~<°dio.h
>

2 
	$maö
()

4 
a
;

5 
b
;

6 
	`sˇnf
("%d%d",&
a
,&
b
);

7 
	`¥ötf
("%d\n",
a
+
b
);

9 
	}
}

	@rescue.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<m©h.h
>

10 
	~<limôs.h
>

12 
	sNode


14 
	mvÆ
;

15 
Node
 *
	m¥ev
;

16 }
	tnode
,*
	tnode_±r
;

18 
	sSèck


20 
node_±r
 
	mt›
;

21 
node_±r
 
	mbŸtom
;

22 }
	t°ack
,*
	t°ack_±r
;

24 
	$push_node
(
°ack_±r
 
s
,
x
)

26 
node_±r
 
√w_node
=“ode_±r)
	`mÆloc
((
node
));

27 
√w_node
->
¥ev
=
NULL
;

28 
√w_node
->
vÆ
=
x
;

29 if(
s
->
t›
==
NULL
)

31 
s
->
t›
=
√w_node
;

32 
s
->
bŸtom
=
√w_node
;

36 
√w_node
->
¥ev
=
s
->
t›
;

37 
s
->
t›
=
√w_node
;

39 
	}
}

41 
	$p›_node
(
°ack_±r
 
s
)

43 if(
s
->
t›
)

45 
node_±r
 
cur
=
s
->
t›
;

46 
x
=
s
->
t›
->
vÆ
;

47 
s
->
t›
=s->t›->
¥ev
;

48 
	`‰ì
(
cur
);

49 
cur
=
NULL
;

50  
x
;

56 
	}
}

59 
	$¥ime_check
(
ö
)

61 
i
;

62 if(
ö
==2||in==3)

66 
i
=2;i<=
ö
/2;i++)

68 if(
ö
%
i
==0)

74 
	}
}

77 
	$föd_MIN
(*
D
,*
D_°©us
,
N
,
M
)

79 
mö
=
INT_MAX
;

80 
pos
=0;

81 
i
;

82 
i
=0;i<
N
*
M
;i++)

84 if(
D
[
i
]<=
mö
&&(
D_°©us
[i]!=-1))

86 
mö
=
D
[
i
];

87 
pos
=
i
;

90  
pos
;

91 
	}
}

94 
	$d°_ˇl
(
a
,
b
, 
N
, 
M
)

96 if(
a
/
M
==
b
/M && 
	`abs
(a-b)==1)

100 if–
	`abs
(
a
/
M
-
b
/M)==1 &&á%M==b%M)

104  
INT_MAX
;

105 
	}
}

107 
	$¥öt_m≠
(*
D
,
N
,
M
)

109 
i
;

110 
i
=0;i<
N
*
M
;i++)

112 if(
i
%
M
==0)

119 
	}
}

121 
	$dijk°ø
(*
D
,*
p
,*
D_°©us
,
N
,
M
,
°¨t
,
íd
)

123 
i
;

124 
k
;

125 
i
=1;i<
N
*
M
-1;i++)

128 
	`¥öt_m≠
(
p
,
N
,
M
);

129 
j
=
	`föd_MIN
(
D
,
D_°©us
,
N
,
M
);

131 
	`¥öt_m≠
(
D
,
N
,
M
);

132 if(
j
==
íd
)

135  
p
[
j
];

137 
D_°©us
[
j
]=-1;

139 
k
=0;k<
N
*
M
;k++)

141 if(
D_°©us
[
k
]!=-1)

147 if((
D
[
j
]+
	`d°_ˇl
(j,
k
,
N
,
M
))<D[k]&&d°_ˇl(j,k,N,M)!=
INT_MAX
)

149 
D
[
k
]=D[
j
]+
	`d°_ˇl
(j,k,
N
,
M
);

150 
p
[
k
]=
j
;

156 
	`¥öt_m≠
(
D
,
N
,
M
);

159 
	}
}

163 
	$maö
()

165 
N
,
M
;

166 
	`sˇnf
("%d%d",&
N
,&
M
);

168 
i
;

169 
j
;

170 
°¨t
;

171 
íd
;

173 *
D
=(*)
	`mÆloc
(()*
N
*
M
);

174 
i
=0;i<
N
*
M
;i++)

177 
D
[
i
]=
INT_MAX
;

178 
D
[
i
]=1;

183 
ivÆ
;

184 
i
=0;i<
N
;i++)

186 
j
=0;j<
M
;j++)

188 
	`sˇnf
("%d",&
ivÆ
);

190 if(
ivÆ
==0)

192 
°¨t
=
i
*
M
+
j
;

194 if(
ivÆ
==1)

196 
íd
=
i
*
M
+
j
;

199 if(
	`¥ime_check
(
ivÆ
)==1)

201 
D
[
i
*
M
+
j
]=-1;

206 
D
[
i
*
M
+
j
]=
INT_MAX
;

215 
D
[
°¨t
]=-1;

216 
D
[
íd
]=
INT_MAX
;

218 
	`¥öt_m≠
(
D
,
N
,
M
);

220 
°ack
 
s
;

221 
s
.
t›
=s.
bŸtom
=
NULL
;

222 
	`push_node
(&
s
,
íd
);

225 *
D_°©us
=(*)
	`mÆloc
(()*
N
*
M
);

227 *
p
=(*)
	`mÆloc
(()*
N
*
M
);

228 
i
=0;i<
N
*
M
;i++)

231 
p
[
i
]=-1;

233 
D
[
°¨t
]=0;

234 
p
[
°¨t
]=start;

235 
k
=0;

237 
k
=0;k<
N
*
M
;k++)

239 if(
D_°©us
[
k
]!=-1)

241 if((
D
[
°¨t
]+
	`d°_ˇl
(°¨t,
k
,
N
,
M
))<D[k]&&d°_ˇl(°¨t,k,N,M)!=
INT_MAX
)

243 
D
[
k
]=D[
°¨t
]+
	`d°_ˇl
(°¨t,k,
N
,
M
);

244 
p
[
k
]=
°¨t
;

255 
°¨t
!=
íd
)

257 
i
=0;i<
N
*
M
;i++)

259 
D_°©us
[
i
]=
D
[i];

262 
íd
=
	`dijk°ø
(
D
,
p
,
D_°©us
,
N
,
M
,
°¨t
,end);

264 if(
íd
==-1)

266 
	`puts
("WhatáÖity!");

269 
	`push_node
(&
s
,
íd
);

271 
node_±r
 
cur
=
s
.
t›
;

272 
°ï
=0;

273 
cur
)

275 
°ï
+=1;

276 
	`¥ötf
("(%d,%d)",
cur
->
vÆ
/
M
,cur->val%M);

277 
	`p›_node
(&
s
);

278 
cur
=cur->
¥ev
;

280 
	`‰ì
(
D
);

281 
	`‰ì
(
D_°©us
);

282 
	`¥ötf
("\n");

283 
	`¥ötf
("%d\n",
°ï
-1);

285 
	}
}

	@skyline.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

10 
	slöe


12 
	mx_vÆ
;

13 
	my_vÆ
;

14 
löe
 * 
	m≤
;

15 }
	tlöe
,*
	tlöe_±r
;

17 
	$buûd_skylöe
(
löe_±r
 
skylöe
,*
öput
)

19 
löe_±r
 
cur
=
skylöe
;

20 
cur
->
≤
)

22 if(
cur
->
x_vÆ
 < 
öput
[0] &&

23 
cur
->
≤
->
x_vÆ
 > 
öput
[0])

25 
löe_±r
 
mid
=÷öe_±r)
	`mÆloc
((
löe
));

26 
mid
->
x_vÆ
=
öput
[0];

27 
mid
->
y_vÆ
=(
cur
->y_vÆ>
öput
[1]?cur->y_val:input[1]);

28 
mid
->
≤
=
cur
->pn;

29 
cur
->
≤
=
mid
;

31 if(
cur
->
x_vÆ
 < 
öput
[2] &&

32 
cur
->
≤
->
x_vÆ
 > 
öput
[2])

34 
löe_±r
 
mid
=÷öe_±r)
	`mÆloc
((
löe
));

35 
mid
->
x_vÆ
=
öput
[2];

36 
mid
->
y_vÆ
=
cur
->y_val;

37 
mid
->
≤
=
cur
->pn;

38 
cur
->
≤
=
mid
;

40 if(
öput
[0] <
cur
->
x_vÆ
 &&

41 
öput
[1] >
cur
->
x_vÆ
)

43 
cur
->
y_vÆ
=cur->y_vÆ>
öput
[1]?cur->y_val:input[1];

45 
cur
=cur->
≤
;

47 if(
cur
->
≤
==
NULL
 &&–
öput
[0] < cur->
x_vÆ
 && cur->x_val < input[2] ))

49 
löe_±r
 
œ°
=÷öe_±r)
	`mÆloc
((
löe
));

50 
œ°
->
≤
=
NULL
;

51 
œ°
->
x_vÆ
=
öput
[2];

52 
œ°
->
y_vÆ
=0;

53 
cur
->
y_vÆ
=
öput
[1];

54 
cur
->
≤
=
œ°
;

56 if(
cur
->
≤
==
NULL
 &&–cur->
x_vÆ
 < 
öput
[0] ))

58 
löe_±r
 
œ°
=÷öe_±r)
	`mÆloc
((
löe
));

59 
œ°
->
x_vÆ
=
öput
[0];

60 
œ°
->
y_vÆ
=
öput
[1];

61 
cur
->
≤
=
œ°
;

62 
œ°
=(
löe_±r
)
	`mÆloc
((
löe
));

63 
œ°
->
y_vÆ
=0;

64 
œ°
->
x_vÆ
=
öput
[2];

65 
cur
->
≤
->≤=
œ°
;

66 
œ°
->
≤
=
NULL
;

68 
cur
=
skylöe
;

69 
cur
->
≤
)

71 if(
cur
->
y_vÆ
==cur->
≤
->y_val)

73 
löe_±r
 
ç
=
cur
->
≤
;

74 
cur
->
≤
=cur->pn->pn;

75 
	`‰ì
(
ç
);

77 
cur
=cur->
≤
;

79 
	}
}

81 
	$maö
()

83 
n
;

84 
	`sˇnf
("%d",&
n
);

86 *
öput
=(*)
	`mÆloc
(()*3);

87 
löe_±r
 
skylöe
=÷öe_±r)
	`mÆloc
((
löe
));

88 
	`sˇnf
("%d%d%d",
öput
+0,input+1,input+2);

89 
skylöe
->
x_vÆ
=
öput
[0];

90 
skylöe
->
y_vÆ
=
öput
[1];

91 
skylöe
->
≤
=(
löe_±r
)
	`mÆloc
((
löe
));

92 
skylöe
->
≤
->
x_vÆ
=
öput
[2];

93 
skylöe
->
≤
->
y_vÆ
=0;

94 
skylöe
->
≤
->≤=
NULL
;

96 
i
=0;

97 
löe_±r
 
œ°_¥e
=
skylöe
;

99 
i
=0;i<
n
;i++)

101 
	`sˇnf
("%d%d%d",
öput
+0,input+1,input+2);

104 
	`buûd_skylöe
(
skylöe
,
öput
);

106 
löe_±r
 
cur
=
skylöe
;

107 
cur
)

109 
	`¥ötf
("%d %d ",
cur
->
x_vÆ
,cur->
y_vÆ
);

110 
cur
=cur->
≤
;

112 
	`¥ötf
("\n");

113 
	}
}

	@topk.c

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~<°dlib.h
>

8 
	~<time.h
>

10 
	#MAX
(
a
,
b
Ë◊)>(b)?◊):(b)

	)

11 
	#MIN
(
a
,
b
Ë◊)>(b)?(b):◊)

	)

12 
	$¥ö±
(*
öput
,
Àn
)

14 
i
;

15 
i
=0;i<
Àn
;i++)

17 
	`¥ötf
("öçut:%d\t",*(
öput
+
i
));

19 
	`¥ötf
("\n");

20 
	}
}

30 
	$bub_s‹t
(*
öput
,
Àn
)

32 
i
=0;

33 
j
=0;

34 
i
=0;i<
Àn
;i++)

36 
j
=
i
;j<
Àn
;j++)

38 if(
öput
[
i
]>öput[
j
])

40 
tmp
=
öput
[
i
];

41 
öput
[
i
]=öput[
j
];

42 
öput
[
j
]=
tmp
;

46 
	}
}

62 
	$quick_s‹t
(*
öput
,
Àn
)

70 
	`∑πôi⁄
(* 
öput
,
low
,
high
)

72 
i
=
low
;

73 
j
=
low
+1;

74 
mid
=
öput
[
low
];

76 
i
<
high
&&
j
<high)

83 if(
öput
[
i
]<
mid
)

85 
ç
=
öput
[
j
];

86 
öput
[
j
]=öput[
i
];

87 
öput
[
i
]=
ç
;

88 
j
++;

90 
i
++;

97 
öput
[
low
]=öput[
j
-1];

98 
öput
[
j
-1]=
mid
;

100  
j
-1;

102 
	`s‹t
(*
öput
,
low
,
high
)

104 if(
low
<
high
)

106 
Êag
=
	`∑πôi⁄
(
öput
,
low
,
high
);

111 if(
Êag
==
low
)

113 
Êag
+=1;

114 
low
+=1;

116 if(
low
<
high
)

119 
	`s‹t
(
öput
,
low
,
Êag
);

120 
	`s‹t
(
öput
,
Êag
,
high
);

124 
	`s‹t
(
öput
,0,
Àn
);

125 
	}
}

141 
	$mîge_s‹t
(*
öput
,
Àn
)

143 
	`mîge_¨øy
(
low
,
high
,
mid
,*
§c
,*
d°
)

145 
i
=
low
;

146 
j
=
mid
;

147 
k
=
low
;

148 
i
<
mid
&&
j
<
high
)

150 if(
§c
[
i
]<§c[
j
])

152 
d°
[
k
]=
§c
[
i
];

153 
i
++;

157 
d°
[
k
]=
§c
[
j
];

158 
j
++;

160 
k
++;

162 
i
<
mid
)

164 
d°
[
k
++]=
§c
[
i
++];

166 
j
<
high
)

168 
d°
[
k
++]=
§c
[
j
++];

170 
i
=
low
;i<
high
;i++)

172 
§c
[
i
]=
d°
[i];

175 
	`mîge_s‹t
(
low
,
high
,* 
§c
,*
d°
)

177 
mid
=(
low
+
high
)/2;

178 if(
low
<
high
&&low!=
mid
)

180 
	`mîge_s‹t
(
low
,
mid
,
§c
,
d°
);

181 
	`mîge_s‹t
(
mid
,
high
,
§c
,
d°
);

182 
	`mîge_¨øy
(
low
,
high
,
mid
,
§c
,
d°
);

185 *
d°
=(*)
	`mÆloc
(()*
Àn
);

186 
	`mem£t
(
d°
,0,
Àn
);

187 
	`mîge_s‹t
(0,
Àn
,
öput
,
d°
);

188 
	`‰ì
(
d°
);

189 
	}
}

206 
	$hóp_s‹t
(*
öput
,
Àn
)

208 
	`hóp_adju°
(*
öput
,
pos
, 
Àn
)

210 
j
;

211 
≤
=
pos
;

212 
ç
=
öput
[
pos
-1];

216 
j
=
pos
*2;j<=
Àn
;j*=2)

218 if(
j
+1<=
Àn
)

220 if(
ç
>=
öput
[
j
-1] &&Åp>=input[j])

224 if(
öput
[
j
-1]>input[j])

226 
öput
[
≤
-1]=öput[
j
-1];

227 
öput
[
j
-1]=
ç
;

231 
öput
[
≤
-1]=öput[
j
];

232 
öput
[
j
]=
ç
;

233 
j
=j+1;

238 if(
ç
>=
öput
[
j
-1])

244 
öput
[
≤
-1]=öput[
j
-1];

245 
öput
[
j
-1]=
ç
;

248 
≤
=
j
;

251 
	`buûd_hóp
(*
öput
,
Àn
)

253 
i
;

254 
i
=
Àn
/2;i>0;i--)

256 
	`hóp_adju°
(
öput
,
i
,
Àn
);

259 
	`s‹t_hóp
(*
öput
,
Àn
)

261 
i
=
Àn
;

262 
ç
;

263 
i
>1)

265 
ç
=
öput
[
i
-1];

266 
öput
[
i
-1]=input[0];

267 
öput
[0]=
ç
;

268 
i
=i-1;

269 
	`hóp_adju°
(
öput
,1,
i
);

272 
	`buûd_hóp
(
öput
,
Àn
);

273 
	`s‹t_hóp
(
öput
,
Àn
);

274 
	}
}

287 * 
	$‰eq_cou¡
(*
öput
,
Àn
)

289 
i
=0;

290 *
‰eq
=(*)
	`mÆloc
(()*
Àn
);

291 
i
=0;i<
Àn
;i++)

293 
‰eq
[
i
]=
öput
[i];

295 
j
=0;

296 
k
=0;

297 
tmp
=
öput
[0];

298 
i
=0;i<
Àn
;i++)

300 if(
öput
[
i
]==
tmp
)

302 
k
++;

306 
tmp
=
öput
[
i
];

307 
k
=1;

308 
j
+=1;

310 
‰eq
[
j
]=
k
;

312 if(
j
!=
Àn
-1)

314 
‰eq
[
j
+1]=0;

316  
‰eq
;

317 
	}
}

319 
£t_s‹t_fun
–* 
s‹t_«me
,(**
s‹t_func
)(*,) )

321 if(
	`°rcmp
(
s‹t_«me
,"Bubble")==0)

323 *
s‹t_func
=
bub_s‹t
;

325 if(
	`°rcmp
(
s‹t_«me
,"qsort")==0)

327 *
s‹t_func
=
quick_s‹t
;

329 if(
	`°rcmp
(
s‹t_«me
,"merge")==0)

331 *
s‹t_func
=
mîge_s‹t
;

333 if(
	`°rcmp
(
s‹t_«me
,"heap")==0)

335 *
s‹t_func
=
hóp_s‹t
;

337 
	}
}

338 
	$maö
(
¨gc
,*
¨gv
[])

341 
	`§™d
–()
	`time
(
NULL
));

342 
Àn
=8;

345 (*
s‹t
)(*
öput
,
Àn
);

346 * 
öput
=(*)
	`mÆloc
(()*
Àn
);

347 
i
=0;

349 
	`puts
("ÂæÖÊéíÂ∫èÊï∞ÁªÑÔºö");

350 
i
=0;i<
Àn
;i++)

353 
öput
[
i
]=
	`ønd
()%100;

354 
	`¥ötf
("%d\t",*(
öput
+
i
));

356 
	`¥ötf
("\n");

358 
	`£t_s‹t_fun
("hóp",&
s‹t
);

359 
	`s‹t
(
öput
,
Àn
);

360 
	`puts
("ÊéíÂ∫èÂêéÊï∞ÁªÑÔºö");

361 
	`¥ö±
(
öput
,
Àn
);

363 *
‰eq
=
	`‰eq_cou¡
(
öput
,
Àn
);

364 
i
=0;i<
Àn
;i++)

366 if(
‰eq
[
i
])

368 
	`¥ötf
("‰eq:%d\n",
‰eq
[
i
]);

377 
	}
}

	@war_qa.c

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

9 
	sArmy


11 
	m˛ass_num
;

12 
	msﬁidî
;

13 
Army
 * 
	mª¨
;

14 }
	t˛ass
,*
	t˛ass_±r
;

16 
	$check_¨my
(
˛ass_±r
 
a
)

18 
˛ass_±r
 
cur
=
a
->
ª¨
;

19 
cur
)

21 
	`¥ötf
("(%d,%d),",
cur
->
˛ass_num
,cur->
sﬁidî
);

22 
cur
=cur->
ª¨
;

24 
	`¥ötf
("\n");

25 
	}
}

27 
	$quîy_ö£π_˛ass
(
˛ass_±r
 
a
,
sﬁ
,
˛n
)

29 
˛ass_±r
 
cur
=
a
;

30 
˛ass_±r
 
n
=(˛ass_±r)
	`mÆloc
((
˛ass
));

31 
n
->
ª¨
=
NULL
;

32 
n
->
˛ass_num
=
˛n
;

33 
n
->
sﬁidî
=
sﬁ
;

35 if(
cur
->
ª¨
==
NULL
)

37 
a
->
ª¨
=
n
;

40 
cur
=cur->
ª¨
;

41 
cur
)

43 if(
cur
->
ª¨
==
NULL
)

45 
cur
->
ª¨
=
n
;

50 if(
cur
->
˛ass_num
==
n
->class_num&&

51 
cur
->
ª¨
->
˛ass_num
!=
n
->class_num)

53 
n
->
ª¨
=
cur
->rear;

54 
cur
->
ª¨
=
n
;

59 
cur
=cur->
ª¨
;

63 
	}
}

65 
	$maö
()

67 
˛ass_±r
 
¨my
=(˛ass_±r)
	`mÆloc
((
˛ass
));

68 
¨my
->
ª¨
=
NULL
;

69 *
öput
=(*)
	`mÆloc
(()*4);

70 
	`sˇnf
("%s",
öput
);

72 
	`°rcmp
(
öput
,"PUSH")==0)

74 
c
;

75 
s
;

76 
	`sˇnf
("%d%d",&
s
,&
c
);

78 
	`quîy_ö£π_˛ass
(
¨my
,
s
,
c
);

79 
	`sˇnf
("%s",
öput
);

82 
˛ass_±r
 
cur
=
¨my
->
ª¨
;

83 
	`¥ötf
("%d",
cur
->
sﬁidî
);

84 
cur
->
ª¨
)

86 
	`¥ötf
(" %d",
cur
->
ª¨
->
sﬁidî
);

87 
cur
=cur->
ª¨
;

89 
	`¥ötf
("\n");

91 
	}
}

	@
1
.
0
14
121
MES.cpp
army.c
ballgame.c
calcu_digit.c
cs.c
dom.c
gift.c
gold_bach.c
kmp.c
poj_sum.c
rescue.c
skyline.c
topk.c
war_qa.c
